name: Update Homebrew Formula

defaults:
  run:
    shell: bash

on:
  push:
    branches:
      - "main"

# TODO: Adjust this to published releases
# on: push
# release:
#   types: [published]

jobs:
  gh-release:
    name: Create Github Release
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup variables
        run: |
          export APP_VERSION=$(cat Cargo.toml| grep version -m 1 | awk -F '"' '{ print $2 }')
          echo "::set-env name=APP_VERSION::$APP_VERSION"
      - name: Test
        # We already test as a part fo the ci.yaml, this is just
        # an additional safety measure before creating any releases.
        run: cargo test
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.APP_VERSION }}-${{ github.run_number }}
          release_name: Release ${{ env.APP_VERSION }}
          body: |
            Automated Release
          draft: false
          prerelease: false
      - name: Export Release URL
        run: echo "${{steps.create_release.outputs.upload_url}}" > upload_url.txt
      - name: Upload Shared Release URL
        uses: actions/upload-artifact@v2
        with:
          name: upload_url
          path: upload_url.txt

  release-macos:
    name: Create MacOS Release
    needs: ["gh-release"]
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: upload_url
      - name: Setup variables
        run: |
          export UPLOAD_URL=$(cat upload_url.txt | awk '{ print $1 }')
          export APP_VERSION=$(cat Cargo.toml| grep version -m 1 | awk -F '"' '{ print $2 }')
          echo "::set-env name=UPLOAD_URL::$UPLOAD_URL"
          echo "::set-env name=APP_VERSION::$APP_VERSION"

      - name: Build Binaries
        run: |
          cargo build --release
          chmod +x ./target/release/tq
          tar -czf .arbor/tq-mac.tar.gz -C ./target/release tq
          echo "::set-env name=SHA256::$(shasum -a 256 .arbor/tq-mac.tar.gz | awk '{ print $1 }')"
      - name: Export MacOS SHA256
        run: echo "$SHA256" > macos_sha256.txt
      - name: Upload MacOS SHA256
        uses: actions/upload-artifact@v2
        with:
          name: macos_sha256
          path: macos_sha256.txt

      - name: Upload Release Assets to Github
        id: upload_release_assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./.arbor/tq-mac.tar.gz
          asset_name: tq-mac.tar.gz
          asset_content_type: application/gzip
      - name: Export MacOS Download URL
        run: echo "${{steps.upload_release_assets.outputs.upload_url}}" > macos_download_url.txt
      - name: Upload MacOS SHA256
        uses: actions/upload-artifact@v2
        with:
          name: macos_download_url
          path: macos_download_url.txt

  release-tap:
    name: Release New Tap
    needs: ["release-macos"]
    # needs: ["release-macos", "release-linux"]
    runs-on: ubuntu-20.04
    steps:
      - name: Download MacOS Sha256
        uses: actions/download-artifact@v2
        with:
          name: macos_sha256
      - name: Download MacOS Download URL
        uses: actions/download-artifact@v2
        with:
          name: macos_download_url
      - name: Setup variables
        run: |
          export MACOS_SHA256=$(cat macos_sha256.txt | awk '{ print $1 }')
          echo "::set-env name=MACOS_SHA256::$MACOS_SHA256"
          export MACOS_TARBALL=$(cat macos_download_url.txt | awk '{ print $1 }')
          echo "::set-env name=MACOS_TARBALL::$MACOS_TARBALL"
          export APP_VERSION=$(cat Cargo.toml| grep version -m 1 | awk -F '"' '{ print $2 }')
          echo "::set-env name=APP_VERSION::$APP_VERSION"
      - name: Homebrew Release
        id: create-homebrew-release
        run: |
          git config --global user.name "Arbor Bot"
          git config --global user.email "noreply@arbor.dev"
          mkdir ~/.ssh && touch ~/.ssh/id_rsa
          echo "${{ secrets.DEPLOY_PRIVATE_KEY }}" >> ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
          git clone git@github.com:4rbor/homebrew-tq.git && rm homebrew-tq/Formula/tq.rb
          mv support/homebrew-formula.rb homebrew-tq/Formula/tq.rb && cd homebrew-tq
          sed -i '' "s@_macos_tarball_@$MACOS_TARBALL@" ./Formula/tq.rb
          sed -i '' "s@_macos_sha256_@$MACOS_SHA256@" ./Formula/tq.rb
          sed -i '' "s@_version_@$APP_VERSION@" ./Formula/tq.rb
          cat Formula/tq.rb
          git add .
          git commit -m "Update to version: $APP_VERSION"
          git push
